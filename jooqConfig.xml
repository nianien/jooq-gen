<configuration xmlns="http://www.jooq.org/xsd/jooq-codegen-3.15.0.xsd">
    <generator>
        <generate>
            <!-- Individual flags for each object type -->
            <globalCatalogReferences>true</globalCatalogReferences>
            <globalSchemaReferences>false</globalSchemaReferences>
            <globalTableReferences>true</globalTableReferences>
            <globalSequenceReferences>true</globalSequenceReferences>
            <globalUDTReferences>true</globalUDTReferences>
            <globalRoutineReferences>true</globalRoutineReferences>
            <globalQueueReferences>true</globalQueueReferences>
            <globalLinkReferences>true</globalLinkReferences>
            <pojos>true</pojos>
            <!--<daos>true</daos>-->
            <emptySchemas>false</emptySchemas>
            <!--<springAnnotations>true</springAnnotations>-->
            <!--<jpaAnnotations>true</jpaAnnotations>-->
            <!--<jpaVersion>2.2</jpaVersion>-->
            <deprecated>false</deprecated>
            <generatedAnnotation>false</generatedAnnotation>
            <!--<generatedAnnotationType>JAVAX_ANNOTATION_GENERATED</generatedAnnotationType>-->
            <!--<generatedAnnotationDate>true</generatedAnnotationDate>-->
            <!--是否使用JDK8的java.timetypes类型-->
            <javaTimeTypes>true</javaTimeTypes>
        </generate>
        <database>
            <forcedTypes>
                <forcedType>
                    <!--将smallint和tinyint强转为int类型-->
                    <name>INTEGER</name>
                    <types>TINYINT|SMALLINT</types>
                </forcedType>
                <forcedType>
                    <!--将long型表示时间转化成java.util.Date-->
                    <userType>java.util.Date</userType>
                    <types>BIGINT</types>
                    <expression>.*time</expression>
                    <lambdaConverter>
                        <!--user-type to db-type-->
                        <from>Date::new</from>
                        <!--user-type to db-type-->
                        <to>Date::getTime</to>
                        <nullable>true</nullable>
                    </lambdaConverter>
                    <!--<converter>
                        org.jooq.Converter.ofNullable(
                        Long.class, Date.class,
                        Date::new, Date::getTime)
                    </converter>-->
                </forcedType>
                <!--将时间&日期类型统一转化成java.util.Date-->
                <forcedType>
                    <userType>java.util.Date</userType>
                    <includeTypes>TIME</includeTypes>
                    <lambdaConverter>
                        <!--user-type to db-type-->
                        <from>local->Date.from(LocalDateTime.of(LocalDate.now(),
                            local).atZone(java.time.ZoneId.systemDefault()).toInstant())
                        </from>
                        <!--user-type to db-type-->
                        <to>date->LocalDateTime.ofInstant(date.toInstant(),
                            java.time.ZoneId.systemDefault()).toLocalTime()
                        </to>
                        <nullable>true</nullable>
                    </lambdaConverter>
                </forcedType>
                <forcedType>
                    <userType>java.util.Date</userType>
                    <includeTypes>DATE</includeTypes>
                    <lambdaConverter>
                        <!--user-type to db-type-->
                        <from>
                            local->Date.from(local.atStartOfDay().atZone(java.time.ZoneId.systemDefault()).toInstant())
                        </from>
                        <!--user-type to db-type-->
                        <to>date->LocalDateTime.ofInstant(date.toInstant(),
                            java.time.ZoneId.systemDefault()).toLocalDate()
                        </to>
                        <nullable>true</nullable>
                    </lambdaConverter>
                </forcedType>
                <forcedType>
                    <userType>java.util.Date</userType>
                    <includeTypes>DATETIME|TIMESTAMP</includeTypes>
                    <lambdaConverter>
                        <!--user-type to db-type-->
                        <from>local->Date.from(local.atZone(java.time.ZoneId.systemDefault()).toInstant())</from>
                        <!--user-type to db-type-->
                        <to>date->LocalDateTime.ofInstant(date.toInstant(), java.time.ZoneId.systemDefault())</to>
                        <nullable>true</nullable>
                    </lambdaConverter>
                </forcedType>
            </forcedTypes>
            <!--根据schema生成代码,不可使用通配符-->
            <!--<schemata>
                <schema>
                    <inputSchema>schema-name</inputSchema>
                </schema>
            </schemata>-->
            <name>org.jooq.meta.extensions.ddl.DDLDatabase</name>
            <properties>
                <property>
                    <key>scripts</key>
                    <value>**/sql/*.sql</value>
                </property>
                <property>
                    <key>sort</key>
                    <value>semantic</value>
                </property>
            </properties>
        </database>
        <target>
            <packageName>com.katana.jooq.entity</packageName>
            <directory>src/main/java</directory>
        </target>
    </generator>
</configuration>